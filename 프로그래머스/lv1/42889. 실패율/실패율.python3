def solution(N, stages):

    stay = [] # 현재 도전 중인 수

    # 스테이지 수만큼 반복 (N+1 포함)
    for i in range(1, N + 2):
        # 현재 각 스테이지에 있는 수만 카운트
        stay += [stages.count(i)]

    stages_count = {} # 스테이지 정보를 담을 딕셔너리

    # 스테이지 정보 갱신
    for i in range(1, N + 1):
        # 스테이지 정보 생성(all:총도전, stay:도전 중, avg:실패율)
        stages_count[i] = {'all' : sum(stay[i - 1:]), 'stay' : stay[i - 1]}
    
        # 스테이지 실패율 계산
        if stages_count[i]['all']:
            stages_count[i]['avg'] = stages_count[i]['stay'] / stages_count[i]['all']
        else:
            stages_count[i]['avg'] = 0
    
    print(stages_count)
    # 실패율 기준으로 내림차순 정렬
    answer = sorted(stages_count.items(), key=lambda x: x[1]['avg'], reverse=True)
    
    # 스테이지 반환
    return [i[0] for i in answer]